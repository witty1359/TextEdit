{"ast":null,"code":"import _slicedToArray from \"F:\\\\React code\\\\textutils\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\React code\\\\textutils\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link,\n// } from \"react-router-dom\";\n\nfunction App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setAlert = _useState4[1];\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 1500);\n  };\n  var toggleMode = function toggleMode() {\n    if (mode === 'dark') {\n      setMode('light');\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.body.style.backgroundColor = 'white';\n    } else {\n      setMode('dark');\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.body.style.backgroundColor = '#032049';\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextEdit\",\n    mode: mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    mode: mode,\n    showAlert: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Alert","Navbar","Text","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"sources":["F:/React code/textutils/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='dark'){\n      setMode('light');\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.body.style.backgroundColor='white';\n    }\n    else{\n      setMode('dark');\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.body.style.backgroundColor='#032049';\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title={\"TextEdit\"} mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        {/* <Routes> */}\n        <Text mode={mode} showAlert={showAlert}/>\n                {/* <Route exact path=\"/\"element={<Text mode={mode} showAlert={showAlert}/>} />\n                <Route exact path=\"/about\" element={<About />} /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAG;EAAA,gBACQJ,QAAQ,CAAC,OAAO,CAAC;IAAA;IAA/BK,IAAI;IAACC,OAAO;EAAA,iBACGN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA9BO,KAAK;IAACC,QAAQ;EACpB,IAAMC,SAAS,GAAC,SAAVA,SAAS,CAAEC,OAAO,EAACC,IAAI,EAAG;IAC9BH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,YAAI;MACbL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAED,IAAMM,UAAU,GAAC,SAAXA,UAAU,GAAK;IACnB,IAAGT,IAAI,KAAG,MAAM,EAAC;MACfC,OAAO,CAAC,OAAO,CAAC;MAChBG,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;MAClDM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;IAC7C,CAAC,MACG;MACFZ,OAAO,CAAC,MAAM,CAAC;MACfG,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjDM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;IAC/C;EACF,CAAC;EAGD,oBACE,uDAEI,oBAAC,MAAM;IAAC,KAAK,EAAE,UAAW;IAAC,IAAI,EAAEb,IAAK;IAAC,UAAU,EAAES,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAChE,oBAAC,KAAK;IAAC,KAAK,EAAEP,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAEtB,oBAAC,IAAI;IAAC,IAAI,EAAEF,IAAK;IAAC,SAAS,EAAEI,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAK1C;AAEP;AAEA,eAAeL,GAAG"},"metadata":{},"sourceType":"module"}