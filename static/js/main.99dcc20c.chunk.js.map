{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Text.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","word","alert","react_default","a","createElement","className","concat","type","role","toUpperCase","slice","msg","Navbar","Fragment","data-bs-theme","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","Text","_useState","useState","_useState2","Object","slicedToArray","text","setText","wrd","split","length","style","color","rows","value","placeholder","onChange","event","target","backgroundColor","newText","showAlert","toLowerCase","navigator","clipboard","writeText","textAlign","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.99dcc20c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalizeFirst=(word)=>{\r\n    return word[0].toUpperCase() +word.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      {capitalizeFirst(props.alert.type)}: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\" data-bs-theme={props.mode}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">About</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/> */}\r\n            <button onClick={props.toggleMode} className={`btn btn-outline-${props.mode==='light'?'dark':'light'}`} >Change Mode</button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string,\r\n    // title: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: \"Jyoti\",\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Text(props) {\r\n  const [text, setText] = useState('');\r\n  const upperCase = ()=>{\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\",\"success\")\r\n  }\r\n  const lowerCase = ()=>{\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\",\"success\")\r\n  }\r\n  const clearAll = ()=>{\r\n    let newText='';\r\n    setText(newText);\r\n    props.showAlert(\"Whole text cleared\",\"success\")\r\n  }\r\n\r\n  const copyAll=()=>{\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text copied\",\"success\")\r\n  }\r\n\r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  let wrd=text.split(' ').length;\r\n  if(text[text.length-1]===' ' || text.length===0) wrd--;\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h4 className='headText'>Enter Text Here</h4>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={text} placeholder='Type your text here' onChange={handleOnChange} style={{color: props.mode==='light'?'black':'white', backgroundColor:props.mode==='light'?'white':'rgb(76 80 84)'}} ></textarea>\r\n        <div className=\"buttons flex-container\">\r\n          <div className=\"btn btn-dark btn-sm btnjyoti\" onClick={upperCase}>Upper Case</div>\r\n          <div className=\"btn btn-dark btn-sm btnjyoti\" onClick={lowerCase}>Lower Case</div>\r\n          <div className=\"btn btn-dark btn-sm btnjyoti\" onClick={clearAll}>Clear All</div>\r\n          <div className=\"btn btn-dark btn-sm btnjyoti\" onClick={copyAll}>Copy All</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"container my-5\" id=\"txtSummary\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h4 style={{textAlign: 'center'}}>Your text Summary</h4>\r\n      <p>{text.length} characters and {wrd} words</p>\r\n      <p>{wrd*0.008} minutes read</p>\r\n      <h4 className>Preview</h4>\r\n      <p className='previewText'>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n  const toggleMode=()=>{\n    if(mode==='dark'){\n      setMode('light');\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.body.style.backgroundColor='white';\n    }\n    else{\n      setMode('dark');\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.body.style.backgroundColor='#032049';\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title={\"TextEdit\"} mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        {/* <Routes> */}\n        <Text mode={mode} showAlert={showAlert}/>\n                {/* <Route exact path=\"/\"element={<Text mode={mode} showAlert={showAlert}/>} />\n                <Route exact path=\"/about\" element={<About />} /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}